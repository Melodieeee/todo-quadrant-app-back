name: Spring Boot CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      GOOGLE_CLIENT_ID: dummy-id-for-test
      GOOGLE_CLIENT_SECRET: dummy-secret-for-test
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: ./mvnw clean install -DskipTests

      - name: Run unit & integration tests
        run: ./mvnw test

  notify-failure:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - name: Notify Failure
        run: |
          curl -X POST https://api.line.me/v2/bot/message/push \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}" \
          -d '{
            "to": "'"${{ secrets.LINE_USER_ID }}"'",
            "messages":[
              {
                "type":"text",
                "text":"üö® Spring Boot CI failed! Ë´ãÊü•Áúã GitHub Actions log„ÄÇ"
              }
            ]
          }'

  notify-success:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Notify Success
        run: |
          curl -X POST https://api.line.me/v2/bot/message/push \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}" \
          -d '{
            "to": "'"${{ secrets.LINE_USER_ID }}"'",
            "messages":[
              {
                "type":"text",
                "text":"‚úÖ Spring Boot CI ÊàêÂäüÈÄöÈÅéÔºÅGood job üéâ"
              }
            ]
          }'

      - name: Deploy to Render
        if: success()
        run: |
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            echo "‚ùå RENDER_DEPLOY_HOOK is not set. Skipping deployment."
            exit 1
          fi
          echo "‚úÖ Tests passed. Triggering Render deploy..."
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

